/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Formularios;

import Funciones.Validaciones;
import Objetos.*;
import bd.ConexionBase;
//import com.oracle.jrockit.jfr.Producer;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Julian
 */
public class frmIngresoProductos extends javax.swing.JFrame {

    /**
     * Creates new form frmMantenimientoIngredientes
     */
    public frmIngresoProductos() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cbTipo_consulta = new javax.swing.JComboBox<>();
        tfdescripcionConsulta = new javax.swing.JTextField();
        tbConsultar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaIngredientes = new javax.swing.JTable();
        btLimpiar = new javax.swing.JButton();
        btIngresar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        tfNombre = new javax.swing.JTextField();
        tfDescripcion = new javax.swing.JTextField();
        cbTamaño = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        tfPrecio = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        cbTipo = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Ingreso de Productos");

        cbTipo_consulta.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Todos", "Id", "Nombre", "Tipo" }));

        tbConsultar.setText("Consultar");
        tbConsultar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tbConsultarActionPerformed(evt);
            }
        });

        tablaIngredientes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Id", "Nombre", "Descripcion", "Tipo", "Costo Porcion", "Cantidad"
            }
        ));
        jScrollPane1.setViewportView(tablaIngredientes);

        btLimpiar.setText("Limpiar");
        btLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btLimpiarActionPerformed(evt);
            }
        });

        btIngresar.setText("Ingresar");
        btIngresar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btIngresarActionPerformed(evt);
            }
        });

        jLabel1.setText("Ingresar los ingredientes del producto:");

        jLabel2.setText("Nombre:");

        jLabel3.setText("Descripcion:");

        cbTamaño.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Normal", "Pequeño", "Grande" }));

        jLabel4.setText("Tamaño:");

        jLabel5.setText("Precio:");

        jLabel6.setText("Tipo:");

        cbTipo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Plato", "Bebida", "Postre", "Entrada" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 596, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(cbTipo_consulta, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(tfdescripcionConsulta)
                        .addGap(18, 18, 18)
                        .addComponent(tbConsultar))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(130, 130, 130)
                        .addComponent(btLimpiar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btIngresar)
                        .addGap(133, 133, 133))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(163, 163, 163)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(17, 17, 17)
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(tfDescripcion)
                                    .addComponent(tfNombre, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel3)
                                            .addComponent(jLabel5))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(tfPrecio, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jLabel1)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(8, 8, 8)
                                        .addComponent(jLabel4)
                                        .addGap(18, 18, 18)
                                        .addComponent(cbTamaño, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(44, 44, 44)
                                        .addComponent(jLabel6)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(cbTipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(tfNombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(tfDescripcion, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbTamaño, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel6)
                    .addComponent(cbTipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(tfPrecio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 9, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbTipo_consulta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfdescripcionConsulta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tbConsultar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btLimpiar)
                    .addComponent(btIngresar))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tbConsultarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tbConsultarActionPerformed
        // TODO add your handling code here:
        if (formularioConsultaValida()){
            consultarRegistro();
        }
    }//GEN-LAST:event_tbConsultarActionPerformed

    private void btLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btLimpiarActionPerformed
        // TODO add your handling code here:
        limpiar();
    }//GEN-LAST:event_btLimpiarActionPerformed

    private void btIngresarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btIngresarActionPerformed
        // TODO add your handling code here:
        
        if (validarFormInProducto()){
            
            //obtener ingredientes de tabla
            ArrayList<String> listaI = new ArrayList<>();
            String ids_ingedientes = "";
            //agregando lista de ids a un arreglo de strings
            int filas [] = tablaIngredientes.getSelectedRows();
            for (int r=0;r<filas.length;r++){
                int fila = filas[r];
                String ids = tablaIngredientes.getValueAt(fila,0).toString();
                listaI.add(ids);
            }
            //convirtiendo el arreglo a un solo string
            StringBuilder sb = new StringBuilder();
            for (String s : listaI)
            {
                sb.append(s);
                sb.append(",");
            }
            ids_ingedientes=sb.toString();
        
            //Ingreso de datos totales
            String nombre = tfNombre.getText();
            String descripcion = tfDescripcion.getText();
            String tamaño = cbTamaño.getSelectedItem().toString();
            float precio = Float.parseFloat(tfPrecio.getText());
            String tipo = cbTipo.getSelectedItem().toString();
            String ingredientes = ids_ingedientes;
            //int ventas = Integer.parseInt(.getText());
            
            Producto p = new Producto(nombre, descripcion, tamaño, precio, tipo, ingredientes);
            ConexionBase c =new ConexionBase();
            
            try{
                c.conectar();
                if(c.ingresarProducto(p)){
                    System.out.println("Producto ingresado.");
                    limpiar();
                    JOptionPane.showMessageDialog(null,"Producto Ingresado Correctamente.");
                }else{
                    System.out.println("producto no ingresado.");
                    JOptionPane.showMessageDialog(null,"Información Incorrecta.","Ingreso de Productos",JOptionPane.ERROR_MESSAGE);
                }
            }catch(Exception e){
                System.out.println(e);
            }
            c.desconectar();
        }
        this.dispose();
    }//GEN-LAST:event_btIngresarActionPerformed

    /**
     * @param args the command line arguments
     */
    
    public void consultarRegistro(){
        String tipo = cbTipo_consulta.getSelectedItem().toString();
        String descripcion = tfdescripcionConsulta.getText();
        
        //consultar
        try{
            //cunsolta a la base
            try{
                ConexionBase c = new ConexionBase();
                c.conectar();
                
                ArrayList<Ingrediente> registro = c.consultarIngredientes("","ingrediente");
                ArrayList<Ingrediente> resultado = new ArrayList<Ingrediente>();
                
                
                if (tipo.equals("Todos")){
                    resultado = registro;
                }else{
                    for (Ingrediente i1:registro){
                        if(tipo.equals("Id")){
                            if(String.valueOf(i1.getId()).contains(descripcion)){
                                resultado.add(i1);
                            }
                        }else if(tipo.equals("Nombre")){
                            if(i1.getNombre().toUpperCase().contains(descripcion.toUpperCase())){
                                resultado.add(i1);
                            }
                        }else if(tipo.equals("Tipo")){
                            if(i1.getTipo().toUpperCase().contains(descripcion.toUpperCase())){
                                resultado.add(i1);
                            }
                        }
                    }
                }
                DefaultTableModel dtm = (DefaultTableModel)tablaIngredientes.getModel();
                dtm.setRowCount(0);
                
                //recorriendo base de datos
                for (Ingrediente ing:resultado){
                    Object[] fila = new Object[6];
                    fila[0] = ing.getId();
                    fila[1] = ing.getNombre();
                    fila[2] = ing.getDescripcion();
                    fila[3] = ing.getTipo();
                    fila[4] = ing.getCosto_porcion();
                    fila[5] = ing.getCantidad();
                    dtm.addRow(fila);
                }
            c.desconectar();
            }catch (Exception e){
                System.out.println("error al consultar ingredientes");
            }
        }catch (Exception e){
            JOptionPane.showMessageDialog(this,"Ocurrió un error al consultar los registros","Consulta",JOptionPane.ERROR_MESSAGE);
        }
    }
    
    private boolean formularioConsultaValida(){
        String tipo = cbTipo_consulta.getSelectedItem().toString();
        String descripcion = tfdescripcionConsulta.getText();
        /*
        if(!tipo.equals("Todo") && descripcion.equals("")){
            JOptionPane.showMessageDialog(this,
                    "Debe ingresar una descripción",
                    "Consulta",
                    JOptionPane.ERROR_MESSAGE);
            return false;
        }*/
        if(tipo.equals("Nombre") && descripcion.equals("")){
            try{
                descripcion.equals("");
            }catch(Exception e){
                JOptionPane.showMessageDialog(this,
                    "Debe ingresar un nombre",
                    "Consulta",
                    JOptionPane.ERROR_MESSAGE);
                return false;
            }        
        }
        if(tipo.equals("Tipo") && descripcion.equals("")){
            try{
                descripcion.equals("");
            }catch(Exception e){
                JOptionPane.showMessageDialog(this,
                    "Debe ingresar un tipo",
                    "Consulta",
                    JOptionPane.ERROR_MESSAGE);
                return false;
            }        
        }
        if(tipo.equals("Id") && descripcion.equals("")){
            try{
                descripcion.equals("");
            }catch(Exception e){
                JOptionPane.showMessageDialog(this,
                    "Debe ingresar un número",
                    "Consulta",
                    JOptionPane.ERROR_MESSAGE);
                return false;
            }        
        }
        return true;
    }
        
    private void limpiar(){
        tfNombre.setText("");
        tfDescripcion.setText("");
        tfPrecio.setText("");
    }
    
    private boolean validarFormInProducto(){
        if (tfNombre.getText().equals("") ||
            tfDescripcion.getText().equals("") ||
            tfPrecio.getText().equals("")  ||
            tablaIngredientes.getSelectedRowCount()==0 ){
            JOptionPane.showMessageDialog(null,"Formulario Incorrecto.","Ingreso de Productos",JOptionPane.ERROR_MESSAGE);
            return false;
        }else{
            return true;
        }
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btIngresar;
    private javax.swing.JButton btLimpiar;
    private javax.swing.JComboBox<String> cbTamaño;
    private javax.swing.JComboBox<String> cbTipo;
    private javax.swing.JComboBox<String> cbTipo_consulta;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tablaIngredientes;
    private javax.swing.JButton tbConsultar;
    private javax.swing.JTextField tfDescripcion;
    private javax.swing.JTextField tfNombre;
    private javax.swing.JTextField tfPrecio;
    private javax.swing.JTextField tfdescripcionConsulta;
    // End of variables declaration//GEN-END:variables
}
