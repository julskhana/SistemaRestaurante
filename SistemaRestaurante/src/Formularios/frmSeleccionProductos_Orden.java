/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Formularios;

import Funciones.Validaciones;
import Objetos.Cliente;
import Objetos.Detalle;
import Objetos.Producto;
import bd.ConexionBase;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Julian
 */
public class frmSeleccionProductos_Orden extends javax.swing.JFrame {

    /**
     * Creates new form frmMantenimientoIngredientes
     */
    public frmSeleccionProductos_Orden() {
        initComponents();
        
        //consultar
        try{
            //cunsolta a la base
            try{
                ConexionBase c = new ConexionBase();
                c.conectar();
                
                ArrayList<Producto> resultado = c.consultarProductos("","producto");
                
                               
                DefaultTableModel dtm = (DefaultTableModel)tablaProductos.getModel();
                dtm.setRowCount(0);
                
                //recorriendo base de datos
                for (Producto pro:resultado){
                    Object[] fila = new Object[8];
                    fila[0] = pro.getId();
                    fila[1] = pro.getNombre();
                    fila[2] = pro.getDescripcion();
                    fila[3] = pro.getTamaño();
                    fila[4] = pro.getPrecio();
                    fila[5] = pro.getTipo();
                    fila[6] = pro.getIngredientes();
                    fila[7] = pro.getVentas();
                    dtm.addRow(fila);
                }
            c.desconectar();
            }catch (Exception e){
                System.out.println("error al consultar productos");
            }
        }catch (Exception e){
            JOptionPane.showMessageDialog(this,"Ocurrió un error al consultar los registros","Consulta",JOptionPane.ERROR_MESSAGE);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cdTipo = new javax.swing.JComboBox<>();
        tfdescripcion = new javax.swing.JTextField();
        tbConsultar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablaProductos = new javax.swing.JTable();
        btSeleccionar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        tfCantidad = new javax.swing.JTextField();
        tfDetalle = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Orden - Ingreso de Productos");

        cdTipo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Todos", "Id", "Nombre" }));

        tbConsultar.setText("Consultar");
        tbConsultar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tbConsultarActionPerformed(evt);
            }
        });

        tablaProductos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Id", "Nombre", "Descripcion", "Tamaño", "Precio", "Tipo", "Ingredientes", "Ventas"
            }
        ));
        jScrollPane1.setViewportView(tablaProductos);

        btSeleccionar.setText("Seleccionar");
        btSeleccionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSeleccionarActionPerformed(evt);
            }
        });

        jLabel1.setText("Cantidad:");

        tfCantidad.setText("1");
        tfCantidad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfCantidadActionPerformed(evt);
            }
        });

        tfDetalle.setEditable(false);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 587, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tfCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(cdTipo, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tfdescripcion, javax.swing.GroupLayout.PREFERRED_SIZE, 271, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(tbConsultar))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(tfDetalle, javax.swing.GroupLayout.PREFERRED_SIZE, 371, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btSeleccionar)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cdTipo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tfdescripcion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(tbConsultar)
                    .addComponent(jLabel1)
                    .addComponent(tfCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 11, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btSeleccionar)
                    .addComponent(tfDetalle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tbConsultarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tbConsultarActionPerformed
        // TODO add your handling code here:
        if (formularioConsultaValida()){
            consultarRegistro();
        }
    }//GEN-LAST:event_tbConsultarActionPerformed

    private void btSeleccionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSeleccionarActionPerformed
        // TODO add your handling code here:
        if(cantidadCValida() && seleccionValida() ){
            int cant = Integer.parseInt(tfCantidad.getText());
            int fila = tablaProductos.getSelectedRow();
            String id_prod = tablaProductos.getValueAt(fila,0).toString();
            String nombre_prod = tablaProductos.getValueAt(fila,1).toString();
            String producto = id_prod+","+nombre_prod;
            float precio_prod = Float.parseFloat(tablaProductos.getValueAt(fila,4).toString());
            float precioTotal = cant*precio_prod;
            
            Detalle det = new Detalle(cant, producto, precio_prod, precioTotal);
            //generando string para tabla detalle
            String detalle2 = String.valueOf(cant)+","+producto+","+String.valueOf(precio_prod)+","+String.valueOf(precioTotal);
            //System.out.println(cant+","+producto+","+precio_prod+","+precioTotal);
            System.out.println(detalle2);
            tfDetalle.setText(detalle2);
            
//            JOptionPane.showMessageDialog(this,"Producto Ingresado Correctamente\nActualice Datos...",Ingreso de Productos,joption);
            JOptionPane.showMessageDialog(this,"Actualice Datos...","Ingreso Correcto",JOptionPane.INFORMATION_MESSAGE);
            this.dispose();
        }else{
            JOptionPane.showMessageDialog(this,"Producto no Ingresado","Error",JOptionPane.ERROR_MESSAGE);
        }
        
    }//GEN-LAST:event_btSeleccionarActionPerformed

    private void tfCantidadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfCantidadActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfCantidadActionPerformed

    /**
     * @param args the command line arguments
     */
    
    public void consultarRegistro(){
        String tipo = cdTipo.getSelectedItem().toString();
        String descripcion = tfdescripcion.getText();
        
        //consultar
        try{
            //cunsolta a la base
            try{
                ConexionBase c = new ConexionBase();
                c.conectar();
                
                ArrayList<Producto> registro = c.consultarProductos("","producto");
                ArrayList<Producto> resultado = new ArrayList<Producto>();
                
                
                if (tipo.equals("Todos")){
                    resultado = registro;
                }else{
                    
                    for (Producto prod:registro){
                        if(tipo.equals("Id")){
                            if(prod.getId()==Integer.parseInt(descripcion)){
                                resultado.add(prod);
                            }
                        }
                        if(tipo.equals("Nombre")){
                            if(prod.getNombre().toUpperCase().contains(descripcion.toUpperCase())){
                                resultado.add(prod);
                            }
                        }
                        if(tipo.equals("Tipo")){
                            if(prod.getTipo().toUpperCase().contains(descripcion.toUpperCase())){
                                resultado.add(prod);
                            }
                        }
                        
                    }
                    //System.out.println("consulta invalida...");
                }
                DefaultTableModel dtm = (DefaultTableModel)tablaProductos.getModel();
                dtm.setRowCount(0);
                
                //recorriendo base de datos
                for (Producto pro:resultado){
                    Object[] fila = new Object[8];
                    fila[0] = pro.getId();
                    fila[1] = pro.getNombre();
                    fila[2] = pro.getDescripcion();
                    fila[3] = pro.getTamaño();
                    fila[4] = pro.getPrecio();
                    fila[5] = pro.getTipo();
                    fila[6] = pro.getIngredientes();
                    fila[7] = pro.getVentas();
                    dtm.addRow(fila);
                }
            c.desconectar();
            }catch (Exception e){
                System.out.println("error al consultar productos");
            }
        }catch (Exception e){
            JOptionPane.showMessageDialog(this,"Ocurrió un error al consultar los registros","Consulta",JOptionPane.ERROR_MESSAGE);
        }
    }
    
    private boolean formularioConsultaValida(){
        String tipo = cdTipo.getSelectedItem().toString();
        String descripcion = tfdescripcion.getText();
        
        if(tipo.equals("Id") && descripcion.equals("")){
                JOptionPane.showMessageDialog(this,"Debe ingresar un Identificador","Consulta",JOptionPane.ERROR_MESSAGE);
                return false;
        }else if(tipo.equals("Nombre") && descripcion.equals("")){
                JOptionPane.showMessageDialog(this,"Debe ingresar un nombre","Consulta",JOptionPane.ERROR_MESSAGE);
                return false;
        }
        
        return true;
    }
    
    private boolean seleccionValida(){
        int n = tablaProductos.getSelectedRowCount();
        if(n!=1){
            JOptionPane.showMessageDialog(this,"Debe seleccionar un registro para Seleccionar","Seleccion Productos",JOptionPane.ERROR_MESSAGE);
            return false;
        }
        return true;
    }
    
    private boolean cantidadCValida(){
        if (tfCantidad.getText().matches("[0-9]+")){
            return true;
        }else{
            JOptionPane.showMessageDialog(this,"Debe ingresar una cantidad correcta","Seleccion Productos",JOptionPane.ERROR_MESSAGE);
            return false;
        }
    }

    private boolean ingresoProductoOrden(){
        int cantidad = Integer.parseInt(tfCantidad.getText());
                
        return false;
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btSeleccionar;
    private javax.swing.JComboBox<String> cdTipo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tablaProductos;
    private javax.swing.JButton tbConsultar;
    private javax.swing.JTextField tfCantidad;
    public static javax.swing.JTextField tfDetalle;
    private javax.swing.JTextField tfdescripcion;
    // End of variables declaration//GEN-END:variables
}
